# -*- coding: utf-8 -*-
"""
Created on Tue Jul 26 19:52:02 2022

@author: Hojoong Lee

데이터 DB 관련 함수
"""


def db_connection():
    import pymysql
    conn = pymysql.connect(host='localhost',
                           user='root',
                           password='ghwnd128',
                           db='baseball',
                           )
    return conn

def table_create_savant():
    
    cursor = db_connection().cursor()
    cursor.execute('''CREATE TABLE savant_raw
                    (pitch_type VARCHAR(255),
                    game_date VARCHAR(255),
                    release_speed FLOAT,
                    release_pos_x FLOAT,
                    release_pos_z FLOAT,
                    player_name VARCHAR(255), 
                    batter INT,
                    pitcher INT,
                    events VARCHAR(255),
                    description VARCHAR(255),
                    spin_dir FLOAT,
                    spin_rate_deprecated FLOAT,
                    break_angle_deprecated FLOAT, 
                    break_length_deprecated FLOAT, 
                    zone FLOAT, 
                    des TEXT,
                    game_type VARCHAR(255), 
                    stand VARCHAR(255), 
                    p_throws VARCHAR(255), 
                    home_team VARCHAR(255), 
                    away_team VARCHAR(255), 
                    type VARCHAR(255),
                    hit_location FLOAT, 
                    bb_type VARCHAR(255), 
                    balls INT, 
                    strikes INT, 
                    game_year INT, 
                    pfx_x FLOAT,
                    pfx_z FLOAT, 
                    plate_x FLOAT, 
                    plate_z FLOAT, 
                    on_3b INT, 
                    on_2b INT, 
                    on_1b INT,
                    outs_when_up INT, 
                    inning INT, 
                    inning_topbot VARCHAR(255), 
                    hc_x FLOAT, 
                    hc_y FLOAT,
                    tfs_deprecated FLOAT, 
                    tfs_zulu_deprecated FLOAT, 
                    fielder_2 INT, 
                    umpire FLOAT, 
                    sv_id FLOAT,
                    vx0 FLOAT, 
                    vy0 FLOAT, 
                    vz0 FLOAT, 
                    ax FLOAT, 
                    ay FLOAT, 
                    az FLOAT, 
                    sz_top FLOAT, 
                    sz_bot FLOAT,
                    hit_distance_sc FLOAT, 
                    launch_speed FLOAT, 
                    launch_angle FLOAT, 
                    effective_speed FLOAT,
                    release_spin_rate FLOAT, 
                    release_extension FLOAT, 
                    game_pk INT,
                    pitcher_1 INT,
                    fielder_2_1 INT, 
                    fielder_3 INT, 
                    fielder_4 INT, 
                    fielder_5 INT, 
                    fielder_6 INT,
                    fielder_7 INT, 
                    fielder_8 INT, 
                    fielder_9 INT, 
                    release_pos_y FLOAT,
                    estimated_ba_using_speedangle FLOAT, 
                    estimated_woba_using_speedangle FLOAT,
                    woba_value FLOAT, 
                    woba_denom FLOAT, 
                    babip_value FLOAT, 
                    iso_value FLOAT,
                    launch_speed_angle FLOAT, 
                    at_bat_number INT, 
                    pitch_number INT, 
                    pitch_name VARCHAR(255),
                    home_score INT, 
                    away_score INT, 
                    bat_score INT, 
                    fld_score INT, 
                    post_away_score INT,
                    post_home_score INT, 
                    post_bat_score INT, 
                    post_fld_score INT,
                    if_fielding_alignment VARCHAR(255), 
                    of_fielding_alignment VARCHAR(255), 
                    spin_axis FLOAT,
                    delta_home_win_exp FLOAT, 
                    delta_run_exp FLOAT,
                    kv VARCHAR(255))''')
    db_connection().close()
           
def table_create_convert():
    
    cursor = db_connection().cursor()
    cursor.execute('''CREATE TABLE savant_convert
                    (PitchNo INT, 
                     Date VARCHAR(255), 
                     Time VARCHAR(255), 
                     PAofInning INT, 
                     PitchofPA INT, 
                     Pitcher VARCHAR(255),
                     PitcherId INT, 
                     PitcherThrows VARCHAR(255), 
                     PitcherTeam VARCHAR(255), 
                     Batter VARCHAR(255), 
                     BatterId INT,
                     BatterSide VARCHAR(255), 
                     BatterTeam VARCHAR(255), 
                     PitcherSet VARCHAR(255), 
                     Inning INT, 
                     Top_Bottom VARCHAR(255),
                     Outs INT, 
                     Balls INT, 
                     Strikes INT, 
                     TaggedPitchType VARCHAR(255),
                     AutoPitchType VARCHAR(255),
                     PitchCall VARCHAR(255), 
                     KorBB VARCHAR(255), 
                     TaggedHitType VARCHAR(255), 
                     PlayResult VARCHAR(255), 
                     OutsOnPlay INT,
                     RunsScored INT, 
                     Notes VARCHAR(255), 
                     RelSpeed FLOAT, 
                     VertRelAngle VARCHAR(255), 
                     HorzRelAngle VARCHAR(255),
                     SpinRate FLOAT, 
                     SpinAxis FLOAT, 
                     Tilt VARCHAR(255),
                     RelHeight FLOAT, 
                     RelSide FLOAT, 
                     Extension FLOAT,
                     InducedVertBreak FLOAT, 
                     HorzBreak FLOAT, 
                     PlateLocHeight FLOAT,
                     PlateLocSide FLOAT, 
                     ExitSpeed FLOAT, 
                     Angle FLOAT, 
                     Distance FLOAT, 
                     Bearing FLOAT, 
                     HC_X FLOAT,
                     HC_Y FLOAT, 
                     EffectiveVelo FLOAT, 
                     GameID VARCHAR(255), 
                     PitchUID VARCHAR(255))''')
    db_connection().close()

def table_create_player_info():
    
    cursor = db_connection().cursor()
    cursor.execute('''CREATE TABLE player_info
                    (SEASON INT,
                    TEAMID INT,
                    FIRSTNAME VARCHAR(255),
                    LASTNAME VARCHAR(255),
                    POS VARCHAR(255),
                    PITCHHAND VARCHAR(255),
                    BATSIDE VARCHAR(255),
                    JERSEY INT,
                    ACTIVE VARCHAR(255),
                    PLAYERID INT,
                    HEIGHT INT,
                    WEIGHT INT,
                    BIRTHDATE VARCHAR(255),
                    HOMETOWN VARCHAR(255),
                    HOMESTATE VARCHAR(255),
                    INDATE VARCHAR(255),
                    D_YEAR INT,
                    INPUTTIME VARCHAR(255))''')
    db_connection().close()